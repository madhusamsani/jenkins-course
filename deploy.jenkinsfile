#!/usr/bin/env groovy

def setJobProperties() {
  properties([
    [
      $class: 'BuildDiscarderProperty',
      strategy: [
        $class: 'BuildRotator',
        daysToKeep: 5,
        numToKeep: 10,
        artifactsDaysToKeep: 5,
        artifactsNumToKeep: 10
      ]
    ]
  ])
}
pipeline {
    agent {
        node {
            label 'master'
        }
    }

     parameters {
        string(name:'artifactzipfilename', defaultValue:"publish.zip")
        string(name:'environment', defaultValue:"dev")
        string(name:'branch', defaultValue:"develop-v2")

    }


    stages {
      stage ('copy artifacts') {
       steps {
            script {
            copyArtifacts filter: 'target/app-capitacommon.json', fingerprintArtifacts: true, projectName: 'app-pipelines/capita/deploy/${environment}/Deploy'
            copyArtifacts filter: 'target/app-capitaapi.json', fingerprintArtifacts: true, projectName: 'app-pipelines/capita/deploy/${environment}/Deploy'
           }
       }
   }
         stage ('deploy package') {
            steps {
                 script {
                    ansiColor('xterm') {
                        println "\u001B[34m\u001B[1m**************\u001B[0m"
                        println "\u001B[34m\u001B[1mdotnet restore\u001B[0m"
                        println "\u001B[34m\u001B[1m**************\u001B[0m"
                        try {
                           sh'''
                            resourcegroupname=`jq -r '.resource_group_name' target/app-capitacommon.json`
                            appservicename=`jq -r '.app_service_name' target/app-capitaapi.json`
                            appname=$appservicename
                            location=`jq -r '.resource_group_location' target/app-capitacommon.json`
                            az webapp config set -g $resourcegroupname -n $appservicename --linux-fx-version 'DOTNETCORE|LTS'
                            az webapp deployment source config-zip --resource-group $resourcegroupname --name ${appname} --src /opt/jenkins/jobs/capita-tfl-api/publish/${artifactzipfilename}
                            az webapp restart --name $appname  --resource-group $resourcegroupname
                            #test
                            '''
                            println "\u001B[32mrestored successfully\u001B[0m"
                        } catch (Exception e) {
                            println "\u001B[31m********************************************************\u001B[0m"
                            println "\u001B[31mFAILED: deploy failed. Please fix the issues\u001B[0m"
                            println "\u001B[31m********************************************************\u001B[0m"
                            sh(returnStdout: true, script: '''exit 1''')
                        }
                    }
                }
            }
        }

    }

    post {
        always {
            deleteDir()
        }
    }
}
